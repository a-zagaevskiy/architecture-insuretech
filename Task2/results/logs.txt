PS E:\yandex-practicum\architecture-sprint-6\Task2> kubectl describe hpa
Name:                                                     insuretech
Namespace:                                                default
Labels:                                                   app.kubernetes.io/instance=insuretech
                                                          app.kubernetes.io/managed-by=Helm
                                                          app.kubernetes.io/name=insuretech
                                                          app.kubernetes.io/version=1.16.0
                                                          helm.sh/chart=insuretech-0.1.0
Annotations:                                              meta.helm.sh/release-name: insuretech
                                                          meta.helm.sh/release-namespace: default
CreationTimestamp:                                        Thu, 13 Mar 2025 02:20:30 +0300
Reference:                                                Deployment/insuretech
Metrics:                                                  ( current / target )
  resource memory on pods  (as a percentage of request):  77% (12147370666m) / 80%
Min replicas:                                             1
Max replicas:                                             10
Deployment pods:                                          3 current / 3 desired
Conditions:
  Type            Status  Reason              Message
  ----            ------  ------              -------
  AbleToScale     True    ReadyForNewScale    recommended size matches current size
  ScalingActive   True    ValidMetricFound    the HPA was able to successfully calculate a replica count from memory resource utilization (percentage of request)
  ScalingLimited  False   DesiredWithinRange  the desired count is within the acceptable range
Events:
  Type     Reason                        Age                From                       Message
  ----     ------                        ----               ----                       -------
  Normal   SuccessfulRescale             45m                horizontal-pod-autoscaler  New size: 1; reason: All metrics below target
  Warning  FailedGetResourceMetric       27m (x7 over 61m)  horizontal-pod-autoscaler  failed to get memory utilization: unable to get metrics for resource memory: no metrics returned from resource metrics API
  Warning  FailedComputeMetricsReplicas  27m (x7 over 61m)  horizontal-pod-autoscaler  invalid metrics (1 invalid out of 1), first error is: failed to get memory resource metric value: failed to get memory utilization: unable to get metrics for resource memory: no metrics returned from resource metrics API
  Normal   SuccessfulRescale             26m (x2 over 53m)  horizontal-pod-autoscaler  New size: 2; reason: memory resource utilization (percentage of request) above target
  Normal   SuccessfulRescale             11m                horizontal-pod-autoscaler  New size: 3; reason: memory resource utilization (percentage of request) above target